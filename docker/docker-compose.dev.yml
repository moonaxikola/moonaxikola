version: '3.9'

services:
  # DATABASE
  postgres:
    image: postgres:13
    container_name: moona-postgres
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - moona

  # REDIS
  redis:
    image: redis:alpine
    container_name: moona-redis
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis:/data
    networks:
      - moona

  # REDIS COMMANDER
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: moona_redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - ${REDIS_COMMANDER_PORT}:8081
    depends_on:
      - redis
    networks:
      - moona

  # MAILHOG
  mailhog:
    image: mailhog/mailhog
    container_name: moona-mailhog
    logging:
      driver: 'none'
    ports:
      - ${SMTP_PORT}:1025
      - ${SMTP_DASHBOARD_PORT}:8025
    networks:
      - moona

  # MINIO
  minio:
    image: quay.io/minio/minio
    container_name: moona-minio
    command: server /data --console-address ":9090"
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_CONSOLE_PORT}:9090
    volumes:
      - minio:/data
    networks:
      - moona

  # NOVU
  novu-db:
    image: mongo
    container_name: moona-mongodb
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - ${NOVU_DB_PORT}:27017
    volumes:
      - mongodb:/data/db
    networks:
      - moona

  novu-api:
    image: 'ghcr.io/novuhq/novu/api:latest'
    container_name: moona-novu-api
    restart: unless-stopped
    environment:
      NODE_ENV: local
      API_ROOT_URL: ${NOVU_API_ROOT_URL}
      DISABLE_USER_REGISTRATION: ${NOVU_DISABLE_USER_REGISTRATION}
      PORT: ${NOVU_API_PORT}
      FRONT_BASE_URL: ${NOVU_FRONT_BASE_URL}
      MONGO_URL: ${NOVU_MONGO_URL}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB_INDEX: ${NOVU_REDIS_DB_INDEX}
      S3_LOCAL_STACK: ${S3_LOCAL_STACK}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_REGION: ${S3_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      JWT_SECRET: ${ACCESS_TOKEN_SECRET}
      STORE_ENCRYPTION_KEY: ${STORE_ENCRYPTION_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
      NEW_RELIC_APP_NAME: ${NEW_RELIC_APP_NAME}
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
    ports:
      - ${NOVU_API_PORT}:3000
    depends_on:
      - novu-db
      - redis
    networks:
      - moona

  novu-ws:
    image: 'ghcr.io/novuhq/novu/ws:latest'
    container_name: moona-novu-ws
    restart: unless-stopped
    environment:
      PORT: ${NOVU_WS_PORT}
      NODE_ENV: ${NODE_ENV}
      MONGO_URL: ${NOVU_MONGO_URL}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      JWT_SECRET: ${ACCESS_TOKEN_SECRET}
    ports:
      - ${NOVU_WS_PORT}:3002
    depends_on:
      - novu-db
      - redis
    networks:
      - moona

  novu-web:
    image: 'ghcr.io/novuhq/novu/web:latest'
    container_name: moona-novu-web
    environment:
      REACT_APP_API_URL: ${NOVU_API_ROOT_URL}
      REACT_APP_ENVIRONMENT: ${NODE_ENV}
      REACT_APP_WIDGET_EMBED_PATH: ${NOVU_WIDGET_EMBED_PATH}
      REACT_APP_DOCKER_HOSTED_ENV: 'true'
    ports:
      - ${NOVU_WEB_PORT}:4200
    depends_on:
      - novu-api
    networks:
      - moona

  novu-widget:
    image: 'ghcr.io/novuhq/novu/widget:latest'
    depends_on:
      - novu-api
      - novu-web
    container_name: moona-novu-widget
    environment:
      REACT_APP_API_URL: ${NOVU_API_ROOT_URL}
      REACT_APP_WS_URL: ${NOVU_REACT_APP_WS_URL}
      REACT_APP_ENVIRONMENT: ${NODE_ENV}
    ports:
      - ${NOVU_WIDGET_PORT}:4500
    networks:
      - moona

  novu-embed:
    image: 'ghcr.io/novuhq/novu/embed:latest'
    depends_on:
      - novu-widget
    container_name: embed
    environment:
      WIDGET_URL: ${NOVU_WIDGET_URL}
    ports:
      - ${NOVU_EMBED_PORT}:4701
    networks:
      - moona

networks:
  moona:
    driver: bridge

volumes:
  postgres:
    name: moona-database
  redis:
    name: moona-redis
  minio:
    name: moona-minio
  mongodb:
    name: moona-mongodb
